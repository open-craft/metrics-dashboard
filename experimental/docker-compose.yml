mordred:
  # This version was recommended in CHAOSS slack as it works with
  # AWS's open source version of Elasticsearch
  image: bitergia/mordred:grimoirelab-0.2.57
  volumes:
    - ./conf/setup.cfg:/home/bitergia/conf/setup.cfg
    - ./conf/credentials.cfg:/home/bitergia/conf/credentials.cfg
    - ../orgs.json:/home/bitergia/conf/orgs.json
    - ./conf/simple-projects.json:/home/bitergia/conf/simple-projects.json
    - ./conf/aliases.json:/home/bitergia/conf/aliases.json
    - ./logs:/home/bitergia/logs
  environment:
    - MORDRED_CONF_FILES=/home/biturgia/conf/setup.cfg /home/biturgia/conf/credentials.cfg
  links:
    - mariadb
    - elasticsearch
    - kibiter

hatstall:
  image: grimoirelab/hatstall:latest
  environment:
    - DATABASE_DIR=/db/
    - ADMIN_USER=${HATSTALL_USER}
    - ADMIN_PASS=${HATSTALL_PASSWORD}
  ports:
    - ${HATSTALL_PORT}:80
  links:
    - mariadb
  volumes:
    -  ./conf/apache-hatstall.conf:/home/grimoirelab/apache-hatstall.conf
    -  ./conf/credentials.cfg:/home/grimoirelab/shdb.cfg

mariadb:
  restart: "always"
  image: mariadb:10.0
  expose:
    - "${MYSQL_PORT}"
  ports:
    - "${MYSQL_PORT}:3306"
  environment:
    - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    - MYSQL_ALLOW_EMPTY_PASSWORD=no

create_certificates:
  image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
  command: >
    bash -c '
      # Generate certificates if needed
      if [[ ! -f /certs/ca/ca.crt ]]; then
        bin/elasticsearch-certutil cert --silent --pem \
          --dns elasticsearch,localhost \
          --ip 127.0.0.1 \
          --out /certs/bundle.zip;
        unzip /certs/bundle.zip -d /certs;
      fi;
      chown -R elasticsearch:0 /certs;
    '
  volumes:
    - ./certs:/certs

elasticsearch:
  restart: on-failure:5
  image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
  environment:
    - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    - ELASTIC_USERNAME=${ELASTIC_USERNAME}
    - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    - network.bind_host=0.0.0.0
    - http.max_content_length=2000mb
    - xpack.security.enabled=true
    - xpack.security.http.ssl.enabled=true
    - xpack.security.http.ssl.verification_mode=certificate
    - xpack.security.http.ssl.key=certs/instance/instance.key
    - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
    - xpack.security.http.ssl.certificate=certs/instance/instance.crt
    - xpack.security.transport.ssl.enabled=true
    - xpack.security.transport.ssl.verification_mode=certificate
    - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
    - xpack.security.transport.ssl.certificate=certs/instance/instance.crt
    - xpack.security.transport.ssl.key=certs/instance/instance.key
  volumes:
    - ./certs:/usr/share/elasticsearch/config/certs
    - ./es-data:/var/lib/elasticsearch
  ports:
    - "${ELASTIC_PORT}:9200"
  expose:
    - "${ELASTIC_PORT}"

kibiter:
  restart: on-failure:5
  image: bitergia/kibiter:secured-v6.8.6-3
  environment:
    - ANONYMOUS_USER=true
    - PROJECT_NAME=Development
    - NODE_OPTIONS=--max-old-space-size=1000
    - ELASTICSEARCH_URL=https://elasticsearch:9200
    - ELASTICSEARCH_USER=${ELASTIC_USERNAME}
    - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    - elasticsearch.ssl.certificateAuthorities=config/certs/ca/ca.crt
    - elasticsearch.ssl.verificationMode=certificate
  links:
    - elasticsearch
  ports:
    - "${KIBANA_PORT}:5601"
  volumes:
    - ./certs:/usr/share/kibana/config/certs/:ro
